--- libm.php	2012-12-18 14:38:22.742945911 +0500
+++ lib.php	2013-01-04 15:00:16.085858510 +0500
@@ -27,7 +27,7 @@
 define('FEEDBACK_MULTICHOICERATED_ADJUST_SEP', '<<<<<');
 define('FEEDBACK_MULTICHOICERATED_IGNOREEMPTY', 'i');
 define('FEEDBACK_MULTICHOICERATED_HIDENOSELECT', 'h');
-session_start();
+
 class feedback_item_multichoicerated extends feedback_item_base {
     protected $type = "multichoicerated";
     private $commonparams;
@@ -193,7 +193,6 @@
 
     public function print_analysed($item, $itemnr = '', $groupid = false, $courseid = false) {
         global $OUTPUT;
-	$_SESSION['questions']++;
         $sep_dec = get_string('separator_decimal', 'feedback');
         if (substr($sep_dec, 0, 2) == '[[') {
             $sep_dec = FEEDBACK_DECIMAL;
@@ -219,7 +218,6 @@
                 $pixwidth = intval($val->quotient * FEEDBACK_MAX_PIX_LENGTH);
 
                 $avg += $val->avg;
-		$score+=$val->value*$val->answercount;
                 $quotient = number_format(($val->quotient * 100), 2, $sep_dec, $sep_thous);
                 echo '<tr>';
                 echo '<td align="left" valign="top">';
@@ -235,11 +233,8 @@
                 echo '</td></tr>';
             }
             $avg = number_format(($avg), 2, $sep_dec, $sep_thous);
-	    $_SESSION['percntavg'] += $avg;
             echo '<tr><td align="left" colspan="2"><b>';
-//            echo get_string('average', 'feedback').': '.$avg.'</b>';
-	    echo '<tr><td align="left" colspan="2"><b>'.get_string('average', 'feedback').': '.$avg.'</b></td></tr>';
-	    echo '<tr><td align="left" colspan="2"><b>'.get_string('score', 'feedback').': '.$score.'</b></td></tr>';
+            echo get_string('average', 'feedback').': '.$avg.'</b>';
             echo '</td></tr>';
         }
     }
@@ -247,49 +242,21 @@
     public function excelprint_item(&$worksheet, $row_offset,
                              $xls_formats, $item,
                              $groupid, $courseid = false) {
-	$_SESSION['questions']++;
-        $sep_dec = get_string('separator_decimal', 'feedback');
-        if(substr($sep_dec, 0, 2) == '[['){
-            $sep_dec = FEEDBACK_DECIMAL;
-        }
-
-        $sep_thous = get_string('separator_thousand', 'feedback');
-        if(substr($sep_thous, 0, 2) == '[['){
-            $sep_thous = FEEDBACK_THOUSAND;
-        }
-
 
         $analysed_item = $this->get_analysed($item, $groupid, $courseid);
 
         $data = $analysed_item[2];
-	$label=$_SESSION['count'];
-	$sizeofdata = sizeof($data);
-        if($_SESSION['count']==1){
-                for($i = 0; $i < $sizeofdata; $i++) {
-                        $aData = $data[$i];
-                                $worksheet->write_string($rowOffset, $i + 1, trim($aData->answertext).' ('.$aData->value.')', $xlsFormats->value_bold);
-                }
-                $worksheet->write_string($rowOffset, sizeof($data) + 1, get_string('average', 'feedback'), $xlsFormats->value_bold);
-                $worksheet->write_string($rowOffset, sizeof($data) + 2, get_string('score', 'feedback'), $xlsFormats->value_bold);
-
-        }
-        $rowOffset+=2;
-
-        $worksheet->write_string($rowOffset, 0,  $label, $xlsFormats->head2);
 
         //write the item
-//        $worksheet->write_string($row_offset, 0, $item->label, $xls_formats->head2);
-  //      $worksheet->write_string($row_offset, 1, $analysed_item[1], $xls_formats->head2);
+        $worksheet->write_string($row_offset, 0, $item->label, $xls_formats->head2);
+        $worksheet->write_string($row_offset, 1, $analysed_item[1], $xls_formats->head2);
         if (is_array($data)) {
             $avg = 0.0;
-	    $score=0.0;
             $sizeofdata = count($data);
             for ($i = 0; $i < $sizeofdata; $i++) {
                 $analysed_data = $data[$i];
-		$_SESSION['datasize']=$sizeofdata;
-                $_SESSION[$i]+=$aData->answercount;
 
-                /*$worksheet->write_string($row_offset,
+                $worksheet->write_string($row_offset,
                                 $i + 2,
                                 trim($analysed_data->answertext).' ('.$analysed_data->value.')',
                                 $xls_formats->value_bold);
@@ -297,26 +264,15 @@
                 $worksheet->write_number($row_offset + 1,
                                 $i + 2,
                                 $analysed_data->answercount,
-                                $xls_formats->default);*/
-		$worksheet->write_number($rowOffset + 1, $i + 1, $aData->answercount, $xlsFormats->default);
-		$score+=$aData->value*$aData->answercount;//count score
+                                $xls_formats->default);
+
                 $avg += $analysed_data->avg;
             }
             //mittelwert anzeigen
-            /*$worksheet->write_string($row_offset,
+            $worksheet->write_string($row_offset,
                                 count($data) + 2,
                                 get_string('average', 'feedback'),
-                                $xls_formats->value_bold);*/
-	     $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
-            $avgs = sprintf("%01.2f", $avg);
-
-            $worksheet->write_number($rowOffset + 1, sizeof($data) + 1, $avgs, $xlsFormats->value_bold);
-                        ///score print
-            //$worksheet->write_string($rowOffset+1, sizeof($data) + 2, get_string('score', 'feedback'), $xlsFormats->value_bold);
-            $worksheet->write_number($rowOffset + 1, sizeof($data) + 2, $score, $xlsFormats->value_bold);
-                        //end of score
-            $_SESSION['totalavg'] += $avg;
-
+                                $xls_formats->value_bold);
 
             $worksheet->write_number($row_offset + 1,
                                 count($data) + 2,
@@ -327,144 +283,6 @@
         return $row_offset;
     }
 
-	//print pdf Added By Hina Yousuf    
-function pdfprint_item(&$content, $item, $groupid, $courseid = false) {
-        $_SESSION['questions']++;
-        $sep_dec = get_string('separator_decimal', 'feedback');
-        if(substr($sep_dec, 0, 2) == '[['){
-            $sep_dec = FEEDBACK_DECIMAL;
-        }
-
-        $sep_thous = get_string('separator_thousand', 'feedback');
-        if(substr($sep_thous, 0, 2) == '[['){
-            $sep_thous = FEEDBACK_THOUSAND;
-        }
-        $analysed_item = $this->get_analysed($item, $groupid, $courseid);
-
-        $data = $analysed_item[2];
-                $label=$_SESSION['count'];
-        $sizeofdata = sizeof($data);
-        if($_SESSION['count']==1){
-                $content = $content.'<td width="8%"><b>'.'S/NO.'.'</b></td>';
-                for($i = 0; $i < $sizeofdata; $i++) {
-                        $aData = $data[$i];
-                        $content = $content.'<td width="15%"><b>'.trim($aData->answertext).' ('.$aData->value.')'.'</b></td>';                       
-                }
-                $content = $content.'<td width="10%"><b>'.get_string('average', 'feedback').'</b></td>';
-                $content = $content.'<td width="10%"><b>'.get_string('score', 'feedback').'</b></td></tr>';
-        }
-        $rowOffset+=2;
-        $content = $content.'<tr><td width="8%"><b>'.$label.'</b></td>';
-                $content = $content.'<td colspan= "7" width="95%"><b>'.$analysed_item[1].'</b></td></tr>';
-        if(is_array($data)) {
-                $content = $content.'<tr><td width="8%"><b>'.''.'</b></td>';
-            $avg = 0.0;
-	    $score=0.0;
-            $sizeofdata = sizeof($data);
-            for($i = 0; $i < $sizeofdata; $i++) {
-                $aData = $data[$i];
-                $_SESSION['datasize']=$sizeofdata;
-                $_SESSION[$i]+=$aData->answercount;
-                $content = $content.'<td width="15%">'.$aData->answercount.'</td>';
-                $score+=$aData->value*$aData->answercount;//count score
-                $avg += $aData->avg;
-            }
-            $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
-            $avgs = sprintf("%01.2f", $avg);
-            $content = $content.'<td width="10%"><b>'.$avgs.'</b></td>';
-            $content = $content.'<td width="10%"><b>'.$score.'</b></td></tr>';
-
-            $_SESSION['totalavg'] += $avg;
-        }
-
-    }
-    //end of pdf
-
-    /***********Get Data for Drawing graph**********************/
-function graph_item($item, $groupid, $courseid = false) {
-         $sep_dec = get_string('separator_decimal', 'feedback');
-        if(substr($sep_dec, 0, 2) == '[['){
-            $sep_dec = FEEDBACK_DECIMAL;
-        }
-
-        $sep_thous = get_string('separator_thousand', 'feedback');
-        if(substr($sep_thous, 0, 2) == '[['){
-            $sep_thous = FEEDBACK_THOUSAND;
-        }
-	 $analysed_item = $this->get_analysed($item, $groupid, $courseid);
-
-        $data = $analysed_item[2];
-        $label=$_SESSION['count'];
-
-        // $worksheet->setFormat("<l><f><ro2><vo><c:green>");
-        //frage schreiben
-        //$worksheet->write_string($rowOffset, 0, $item->label, $xlsFormats->head2);
-        $sizeofdata = sizeof($data);
-        if($_SESSION['count']==1){
-
- // adds it to our session 
-
-            for($i = 0; $i < $sizeofdata; $i++) {
-                $aData = $data[$i];
-
-                                $_SESSION['text'][]=$aData->answertext;
-             }
-
-
-        }
-        $rowOffset+=2;
-
-         if(is_array($data)) {
-            $avg = 0.0;
-            $score=0.0;
-            $sizeofdata = sizeof($data);
-            for($i = 0; $i < $sizeofdata; $i++) {
-                $aData = $data[$i];
-                $_SESSION['datasize']=$sizeofdata;
-                $_SESSION[$i]+=$aData->answercount;
-
-                $score+=$aData->value*$aData->answercount;//count score
-                $avg += $aData->avg;
-            }
-            //mittelwert anzeigen
-            // $worksheet->setFormat("<l><f><ro2><vo><c:red>");
-
-            // $worksheet->setFormat("<l><f><vo>");
-            $avg=number_format((float)$avg, 2, $sep_dec, $sep_thous);
-            $avgs = sprintf("%01.2f", $avg);
-
-        }
-        $rowOffset +=1 ;
-        return $rowOffset;
-    }
-
-    /***********Get Data for Feedback Report**********************/
-
- function get_average( $item, $groupid, $courseid = false) {
-        $_SESSION['questions']++;
-        $analysed_item = $this->get_analysed($item, $groupid, $courseid);
-
-        $data = $analysed_item[2];
-
-        if(is_array($data)) {
-
-            $avg = 0.0;
-            $score=0.0;
-            $sizeofdata = sizeof($data);
-            for($i = 0; $i < $sizeofdata; $i++) {
-
-                $aData = $data[$i];
-
-                $avg += $aData->avg;
-            }
-	             $_SESSION['totalavg']+= $avg;
-        }
-
-        return $rowOffset;
-    }
-
-
-
     /**
      * print the item at the edit-page of feedback
      *
@@ -496,7 +313,6 @@
 
         //print the presentation
         echo '<div class="feedback_item_presentation_'.$align.'">';
-	echo "<font size='3'>";
         switch($info->subtype) {
             case 'r':
                 $this->print_item_radio($item, false, $info, $align, true, $lines);
@@ -533,12 +348,11 @@
 
         //print the question and label
         echo '<div class="feedback_item_label_'.$align.$highlight.'">';
-            echo "<font size='3'><b>".format_text($item->name.$requiredmark, true, false, false)."</b></font>";
+            echo format_text($item->name.$requiredmark, true, false, false);
         echo '</div>';
 
         //print the presentation
         echo '<div class="feedback_item_presentation_'.$align.$highlight.'">';
-        echo "<font size='3'>";
         switch($info->subtype) {
             case 'r':
                 $this->print_item_radio($item, $value, $info, $align, false, $lines);
@@ -547,7 +361,6 @@
                 $this->print_item_dropdown($item, $value, $info, $align, false, $lines);
                 break;
         }
-        echo"</font>";
         echo '</div>';
     }
 
