// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package jplagTutorial.jplagClient;

public interface JPlagTyp extends java.rmi.Remote {
    public jplagTutorial.jplagClient.ServerInfo getServerInfo() throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public java.lang.String compareSource(jplagTutorial.jplagClient.Option arguments, javax.mail.internet.MimeMultipart inputZipFile) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public java.lang.String startSubmissionUpload(jplagTutorial.jplagClient.StartSubmissionUploadParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int continueSubmissionUpload(byte[] data) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public jplagTutorial.jplagClient.Status getStatus(java.lang.String submissionID) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public javax.mail.internet.MimeMultipart getResult(java.lang.String submissionID) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public jplagTutorial.jplagClient.StartResultDownloadData startResultDownload(java.lang.String submissionID) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public byte[] continueResultDownload(int dummy) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int cancelSubmission(java.lang.String submissionID) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int updateUserInfo(jplagTutorial.jplagClient.UpdateUserInfoParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public jplagTutorial.jplagClient.UserDataArray getUserDataArray(int dummy) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int setUserData(jplagTutorial.jplagClient.SetUserDataParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public boolean requestAccount(jplagTutorial.jplagClient.RequestData params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public jplagTutorial.jplagClient.RequestDataArray getAccountRequests(boolean lengthOnly) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int finishAccountRequest(jplagTutorial.jplagClient.FinishRequestData finishData) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int extendAccount(java.lang.String extendCode) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public jplagTutorial.jplagClient.MailTemplateArray getMailTemplates(int type) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int setMailTemplate(jplagTutorial.jplagClient.SetMailTemplateParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int notifyDevelopers(jplagTutorial.jplagClient.NotifyDevelopersParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
    public int setDeveloperState(jplagTutorial.jplagClient.SetDeveloperStateParams params) throws 
        jplagTutorial.jplagClient.JPlagException,  java.rmi.RemoteException;
}
