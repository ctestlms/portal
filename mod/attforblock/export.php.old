<?PHP // $Id: export.php,v 1.1.2.2 2009/02/23 19:22:40 dlnsk Exp $

//  Lists all the sessions for a course

    require_once('../../config.php');    
	require_once('locallib.php');
//	require_once('grouplib.php');
	require_once('export_form.php');
       // require_once('exportpdf.php');

 require('tcpdf/config/lang/eng.php');
require('tcpdf/tcpdf.php');
        

    $id 	= required_param('id', PARAM_INT);
    $where = '';
//	$format	= optional_param('format', '', PARAM_ACTION);
	
    if (! $cm = $DB->get_record("course_modules", array("id"=>$id))) {
        print_error("Course Module ID was incorrect");
    }

    if (! $course = $DB->get_record("course", array("id"=>$cm->course))) {
        print_error("Course is misconfigured");
    }
    
    if (! $attforblock = $DB->get_record('attforblock', array('id'=>$cm->instance))) {
        print_error("Course module is incorrect");
    }
    
    require_login($course->id);
	
    $context = get_context_instance(CONTEXT_MODULE, $cm->id);
    require_capability('mod/attforblock:export', $context);
    
	$mform_export = new mod_attforblock_export_form('export.php', array('course'=>$course, 'cm'=>$cm, 'modcontext'=>$context));
    
	if ($fromform = $mform_export->get_data()) {
		$group = groups_get_group($fromform->group);
	    if ($group) {
	    	//$students = get_users_by_capability($context, 'moodle/legacy:student', 'u.id, u.idnumber, u.firstname, u.lastname', 'u.idnumber ASC', '', '', $group->id, '', false);
	    	$sql = "SELECT u.*
                FROM {role_assignments} ra, {user} u, {course} c, {context} cxt
                WHERE ra.userid = u.id
                    AND ra.contextid = cxt.id
                    AND cxt.contextlevel = 50
                    AND cxt.instanceid = c.id
                    AND c.id = ?
                    AND roleid =5
                    AND u.id IN (SELECT userid FROM {groups_members} gm WHERE gm.groupid = ?)
                ORDER BY u.lastname ASC";
            $params = array($cm->course, $group->id);
            $students = $DB->get_records_sql($sql, $params);
	    } else {
	    	//$students = get_users_by_capability($context, 'moodle/legacy:student', 'u.id, u.idnumber, u.firstname, u.lastname', 'u.idnumber ASC', '', '', '', '', false);
	    	$sql = "SELECT u.*
                FROM {role_assignments} ra, {user} u, {course} c, {context} cxt
                WHERE ra.userid = u.id
                    AND ra.contextid = cxt.id
                    AND cxt.contextlevel = 50
                    AND cxt.instanceid = c.id
                    AND c.id = ?
                    AND roleid =5
                ORDER BY u.lastname ASC";
            $params = array($cm->course);
            $students = $DB->get_records_sql($sql, $params);
	    }
	    	//$teachers = get_users_by_capability($context, 'moodle/legacy:editingteacher', 'u.id, u.idnumber, u.firstname, u.lastname', 'u.idnumber ASC', '', '', '', '', false);
	    	$sql = "SELECT u.*
                FROM {role_assignments} ra, {user} u, {course} c, {context} cxt
                WHERE ra.userid = u.id
                    AND ra.contextid = cxt.id
                    AND cxt.contextlevel = 50
                    AND cxt.instanceid = c.id
                    AND c.id = ?
                    AND roleid = 3
                ORDER BY u.lastname ASC";
            $params = array($cm->course);
            $teachers = $DB->get_records_sql($sql, $params);
	    
		if ($students) {
		    $filename = clean_filename($course->shortname.'_Attendances_'.userdate(time(), '%Y%m%d-%H%M'));
		    
		    $data->tabhead = array();
                    $data->lecture = array();
//			$data->sheettitle = $course->fullname.' - ';
//			$data->sheettitle .= $group ? $group->name : get_string('allparticipants');
			$data->course = $course->fullname;
                        
                        if($teachers){
                            //$data->teacher = 'hello';
                            $i=0;
                            foreach($teachers as $teacher){
                                $data->teacher[] = $i>0 ? ', '.$teacher->firstname.' '.$teacher->lastname : $teacher->firstname.' '.$teacher->lastname;
                                $i = $i + 1;
                            }
                        }
			$data->group = $group ? $group->name : get_string('allparticipants');
                        $data->tabhead[] = get_string('serialno','attforblock');
			//if (isset($fromform->ident['id'])) {
				$data->tabhead[] = get_string('registrationno','attforblock');
			//}
			//if (isset($fromform->ident['uname'])) {
			//	$data->tabhead[] = get_string('username');
			//}
			$data->tabhead[] = get_string('fullname','attforblock');
			//$data->tabhead[] = get_string('firstname');
			
			$select = "courseid = {$course->id} AND sessdate >= {$course->startdate}";
			if (isset($fromform->selectdaterange)) {
				$select .= " AND sessdate >= {$fromform->sessionstartdate} AND sessdate <= {$fromform->sessionenddate}";
                                $where = " s.courseid={$course->id} AND s.sessdate >= $course->startdate AND s.sessdate >= {$fromform->sessionstartdate} AND s.sessdate <= {$fromform->sessionenddate}";
			} else {
				$select .= " AND lasttaken != 0";
			}
	
			if ($sessions = $DB->get_records_select('attendance_sessions', $select, null, 'sessdate ASC')) {
				foreach($sessions as $sess) {
					$data->tabhead[] = "'". userdate($sess->sessdate, get_string('strftimedm', 'attforblock'))."'";
                                        if($sess->description){
                                            $data->lecture[] = get_description($sess->description, true);
                                        }
                                        else
                                        {
                                            $data->lecture[] = "Class";
                                        }
				}
			} else {
				print_error('Sessions not found!', 'report.php?id='.$id);
			}
                        $statuses = get_statuses($course->id);
                        //print attendance statuses P, A etc..
                        foreach($statuses as $st) {
				$data->tabhead[] = $st->acronym;
			}
			$data->tabhead[] = 'Abs %';
                        //$data->tabhead[] = 'No. of Abs';
			
			$i = 0;
		    $data->table = array();
                    
			
			foreach($students as $student) {
				
				$data->table[$i][] = $i + 1;
                                //if (isset($fromform->ident['id'])) {
					$data->table[$i][] = $student->idnumber;
				//}
				//if (isset($fromform->ident['uname'])) {
				//	$data->table[$i][] = $student->username;
				//}
				$data->table[$i][] = $student->firstname.' '.$student->lastname;
				//$data->table[$i][] = $student->firstname;
				foreach ($sessions as $sess) {
					if ($rec = $DB->get_record('attendance_log', array('sessionid'=>$sess->id, 'studentid'=>$student->id))) {
						$data->table[$i][] = $statuses[$rec->statusid]->acronym;
					} else {
						$data->table[$i][] = '-';
					}
                                        
				}

                                if (isset($fromform->selectdaterange)) {
                                    foreach($statuses as $st) {
					$data->table[$i][] = get_attendance_bydate($student->id, $course, $st->id,$where);
                                    }
                                    $data->table[$i][] = get_percent_absent($student->id, $course,$where).'%';
                                    
                                    //$data->table[$i][] = get_attendance($student->id, $course) -  (get_grade($student->id, $course));
                                }
                                else{
                                    foreach($statuses as $st) {
					$data->table[$i][] = get_attendance($student->id, $course, $st->id);
                                    }
                                    $data->table[$i][] = get_percent_absent($student->id, $course).'%';
                                    
                                }
				$i++;
			}
			
			if ($fromform->format == 'text') {
				ExportToCSV($data, $filename);
			} elseif($fromform->format == 'pdf') {
                         	ExportToPDF($data, $filename);
			}elseif($fromform->format == 'excel') {
                         	ExportToTableEd($data, $filename, $fromform->format);
			}
                        else{
                                ExportToTableEd($data, $filename, $fromform->format);
                        }
			exit;
		} else {
			print_error('Students_not_found!', '', 'report.php?id='.$id);
		}
    } else {
		/// Print headers
	    $navlinks[] = array('name' => $attforblock->name, 'link' => "view.php?id=$id", 'type' => 'activity');
	    $navlinks[] = array('name' => get_string('export', 'quiz'), 'link' => null, 'type' => 'activityinstance');
	    print_header("$course->shortname: ".$attforblock->name.' - ' .get_string('export', 'quiz'), $course->fullname,
	                 $navlinks, "", "", true, "&nbsp;", navmenu($course));
	    
	    show_tabs($cm, $context, 'export');
    	$mform_export->display();
    }
	print_footer($course);
    
/////////////////////////////////////////////////////////////////////////////////

function ExportToTableEd($data, $filename, $format) {
	global $CFG;
	
    if ($format === 'excel') {
	    //require_once("$CFG->libdir/excellib.class.php");/*
            require_once($CFG->dirroot.'/lib/excellib.class.php');
	    $filename .= ".xls";
	    $workbook = new MoodleExcelWorkbook("-");
    } else {
	    require_once("$CFG->libdir/odslib.class.php");
	    $filename .= ".ods";
	    $workbook = new MoodleODSWorkbook("-");
    }
/// Sending HTTP headers
    ob_clean();
    $workbook->send($filename);
/// Creating the first worksheet
    $myxls =& $workbook->add_worksheet('Attendances');
/// format types
    $formatbc =& $workbook->add_format();
    $formatbc->set_bold(1);
    //$formatbc->set_size(14);
    
    $myxls->write(0, 0, get_string('course'), $formatbc);
    $myxls->write(0, 1, $data->course, $formatbc);
    $myxls->write(1, 0, get_string('teacher','attforblock'), $formatbc);
    $trs = "";
    foreach ($data->teacher as $t){
        $trs= $trs.$t;
    }
    $myxls->write(1, 1, $trs, $formatbc);
    $i = 3;
    $j = 3;
    $myxls->write(3, 2, get_string('sessiondescription','attforblock'));
    foreach ($data->lecture as $l){
       $myxls->write($i,$j++, $l);
    }

    $i = 4;
    $j = 0;
    $formatbc->set_size(10);
    foreach ($data->tabhead as $cell) {
    	$myxls->write($i, $j++, $cell, $formatbc);
    }
    
    
    $i++;
    $j = 0;
    foreach ($data->table as $row) {
    	foreach ($row as $cell) {
    		//$myxls->write($i, $j++, $cell);
    		if (is_numeric($cell)) {
   			$myxls->write_number($i, $j++, $cell);
    		} else {
    			$myxls->write_string($i, $j++, $cell);
    		}
    	}
		$i++;
		$j = 0;
    }
	$workbook->close();	
    exit;
}


function ExportToCSV($data, $filename) {
    $filename .= ".txt";

    header("Content-Type: application/download\n");
    header("Content-Disposition: attachment; filename=\"$filename\"");
    header("Expires: 0");
    header("Cache-Control: must-revalidate,post-check=0,pre-check=0");
    header("Pragma: public");

    echo get_string('course')."\t".$data->course."\n";
    echo get_string('teacher','attforblock')."\t";
    foreach ($data->teacher as $t)
        echo $t;
    echo "\n";
    echo "\t".get_string('sessiondescription','attforblock')."\t-\t";
    foreach ($data->lecture as $l){
        echo $l."\t";
    }
     echo "\n";
    
    //echo get_string('group')."\t".$data->group."\n\n";
    
    echo implode("\t", $data->tabhead)."\n";
    foreach ($data->table as $row) {
    	echo implode("\t", $row)."\n";
    }
    echo "\n\n\tSignature:\t______________";
}

 function ExportToPDF($data, $filename){
    
//$pdf=new PDF();
//Column titles
$header=$data->tabhead;
   // create new PDF document
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

// set document information
$pdf->SetCreator(PDF_CREATOR);
$pdf->SetAuthor('Muhammad Saqib');
$pdf->SetTitle('Attendance Report');
$pdf->SetSubject('Attendance Report');

// remove default header/footer
$pdf->setPrintHeader(false);
$pdf->setPrintFooter(false);

// set default monospaced font
//$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

//set margins
//$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);
$pdf->SetMargins(PDF_MARGIN_LEFT, PDF_MARGIN_TOP, PDF_MARGIN_RIGHT);


//set auto page breaks
$pdf->SetAutoPageBreak(TRUE, PDF_MARGIN_BOTTOM);

//set image scale factor
$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

//set some language-dependent strings
$pdf->setLanguageArray($l);

// ---------------------------------------------------------

// set font
$pdf->SetFont('helvetica', '', 6);

// add a page
$pdf->AddPage('L','A4');
ob_clean();
// print a line using Cell()
//$pdf->Cell(0, 10, 'Example 002', 1, 1, 'C');
$htmcont = ImprovedTable($header,$data->lecture,$data->table,$data->teacher, $data->course);
$pdf->writeHTML($htmcont, true, false,false,false,'');
//echo $htmcont;
// ---------------------------------------------------------

//Close and output PDF document
$pdf->Output($filename, 'D');

 }

function ImprovedTable($header,$lecture,$data,$teacher,$course)
{
    //Column widths
    //$w=array(40,35,40,45);
    //Header
    $content = $content.'<h1 align="center">Attendance Sheet</h1><h1 align="left">'.get_string('course').': '.$course.'</h1>';
    $content = $content.'<h1 align="left">'.get_string('teacher','attforblock').': ';
    foreach ($teacher as $t)
        $content = $content.$t;
     $content = $content.'</h1>';
    $content = $content.'<table cellpadding="2" border="1"><tr>';
    $content = $content.'<td width="3%">-</td><td width="%10">Lecture Hours/Lab</td><td width="13%">-</td>';
    foreach ($lecture as $l){
        $content = $content.'<td width="18">'.$l.'</td>';
    }
    $content = $content.'<td width="18">-</td><td width="18">-</td><td width="25">-</td></tr><tr>';
    for($i=0;$i<count($header);$i++)
        //$this->Cell($w[$i],7,$header[$i],1,0,'C');
        if($i==0){
            $content = $content.'<td width="3%">'.$header[$i].'</td>';
        }elseif($i==1){
            $content = $content.'<td width="10%">'.$header[$i].'</td>';
        }elseif($i==2){
            $content = $content.'<td width="13%">'.$header[$i].'</td>';
        }elseif($i==count($header)-1){
            $content = $content.'<td width="25">'.$header[$i].'</td>';
        }else{
            $content = $content.'<td width="18">'.str_replace("'","",$header[$i]).'</td>';
        }
    //$this->Ln();
    $content = $content. '</tr>';
    //Data
    foreach($data as $row)
    {
        $content = $content. '<tr>';
        $i = 0;
       foreach($row as $col){
           if($i==0){
            $content = $content. '<td width="3%">'.$col.'</td>';
           }elseif($i==1){
            $content = $content. '<td width="10%">'.$col.'</td>';
           }elseif($i==2){
            $content = $content. '<td width="13%">'.$col.'</td>';
           }elseif($i==count($row)-1){
            $content = $content.'<td width="25">'.$col.'</td>';
           }else{
            $content = $content. '<td align="center" valign="middle" width="18">'.$col.'</td>';
           }
           $i = $i + 1;
       }
       $content = $content. '</tr>';
    }
    $content = $content. '</table>';
    //Closure line
    //$this->Cell(array_sum($w),0,'','T');
    //echo 'Hello';
    return  $content;
}



?>
